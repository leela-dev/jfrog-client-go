resources:
  - name: jfrogClientGo
    type: GitRepo
    configuration:
      gitProvider: LeelaGitHub
      path: leela-dev/jfrog-client-go
      branches:
        include: dev
      buildOn:
        commit: true

pipelines:
  - name: Frogbot_Fix
    configuration:
      jfrogCliVersion: 2
      runtime:
        type: image
        image:
          custom:
            name: releases-docker.jfrog.io/jfrog/pipelines-u18node
            tag: "16"
            autoPull: true
      environmentVariables:
        readOnly:
          RESOLVE_REPO: npm-virtual
          EXECUTION_PATH: $res_jfrogClientGo_resourcePath
          JFROG_TASK_DEBUG: "true"
    steps:
      - name: Frogbot_Fix
        type: Bash
        configuration:
          integrations:
            - name: jfrogPlatform
            - name: LeelaGitHub
            - name: int_default_artifactory
          inputResources:
            - name: jfrogClientGo
          environmentVariables:
            JF_URL: $int_jfrogPlatform_url
            JF_ACCESS_TOKEN: $int_jfrogPlatform_accessToken
            JF_GIT_TOKEN: $int_LeelaGitHub_token
            JF_GIT_PROVIDER: "github"
            JF_GIT_API_ENDPOINT: $int_LeelaGitHub_url
            JF_GIT_PR_ID: $res_jfrogGoClient_pullRequestNumber
        execution:
          onStart:
            - task: jfrog/setup-go@v0.0.2
              input:
                version: "1.19.3"
                cacheIntegration: int_default_artifactory
            - go version
            - go env GOPATH
          onExecute:
            - pushd $res_jfrogClientGo_resourcePath/frogbot-task
            - jfrog npmc --repo-resolve $RESOLVE_REPO
            - jfrog npm install
            - npm run dist
            - popd
            - add_run_variables JF_GIT_OWNER="$(echo $res_jfrogClientGo_gitRepoFullName | cut -f1 -d'/')"
            - add_run_variables JF_GIT_REPO="$(echo $res_jfrogClientGo_gitRepoFullName | cut -f2 -d'/')"
            # Run frogbot task
            - task: frogbot@0.0.1
              id: frogbot_test
              input:
                # full repository name
                repository: "leela-dev/jfrog-client-go"
                # JFrog Platform URL
                platformURL: "https://pipeecosys.jfrogdev.org/"
                # integration name for access token of platform
                accessToken: "jfrogPlatform"
                # integration for git token to access git server provider
                gitToken: "LeelaGitHub"
                # git provider name
                provider: "github"
                # git provider end point
                endPoint: "https://api.github.com"
                # action to be done by frogbot
                botAction: "create-fix-pull-requests"
                # pull request id
                pullRequestID: $res_jfrogGoClient_pullRequestNumber
            - cd $res_jfrogClientGo_resourcePath
            - curl -fLg "https://releases.jfrog.io/artifactory/frogbot/v2/[RELEASE]/getFrogbot.sh" | sh
            - ./frogbot create-fix-pull-requests
            # For Windows runner:
            # - iwr https://releases.jfrog.io/artifactory/frogbot/v2/[RELEASE]/frogbot-windows-amd64/frogbot.exe -OutFile .\frogbot.exe
            # - .\frogbot.exe create-fix-pull-requests
